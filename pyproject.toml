[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rfd"
version = "1.0.0"
description = "Reality-First Development Protocol"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "RFD Team"}]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "click>=8.0.0",
    "requests>=2.28.0", 
    "pyyaml>=6.0",
    "questionary>=1.10.0",
    "python-frontmatter>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
rfd = "rfd.cli:cli"

[project.urls]
Homepage = "https://github.com/rfd-protocol/rfd"
Repository = "https://github.com/rfd-protocol/rfd"
Documentation = "https://github.com/rfd-protocol/rfd/docs"

[tool.setuptools.packages.find]
where = ["src"]


[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=src/rfd",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "-ra",
]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (medium speed)",
    "system: System/E2E tests (slow)",
    "smoke: Smoke tests (critical functionality)",
    "regression: Regression tests",
]

[tool.black]
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]